# Generated by Django 5.0 on 2024-05-05 19:05

import django.core.validators
import django.db.models.deletion
import django.db.models.functions.datetime
import mptt.fields
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CategoriaVitola',
            fields=[
                ('id', models.AutoField(choices=[(7, 'V'), (8, 'VI'), (9, 'VII'), (10, 'VIII'), (5, 'IX')], editable=False, primary_key=True, serialize=False)),
                ('descripcion', models.CharField(max_length=50, unique=True)),
                ('orden', models.IntegerField(unique=True)),
            ],
            options={
                'db_table': 'cla_categoriavitola',
                'ordering': ['orden'],
            },
        ),
        migrations.CreateModel(
            name='ClaseMateriaPrima',
            fields=[
                ('id', models.AutoField(choices=[(1, 'Capote'), (2, 'F1'), (3, 'F2'), (4, 'F3'), (7, 'F4'), (5, 'Capa Clasificada'), (6, 'Capa sin Clasificar')], editable=False, primary_key=True, serialize=False)),
                ('descripcion', models.CharField(max_length=80, unique=True)),
                ('capote_fortaleza', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'cla_clasemateriaprima',
                'ordering': ['descripcion'],
            },
        ),
        migrations.CreateModel(
            name='ConfCentrosElementosOtros',
            fields=[
                ('id', models.AutoField(choices=[(1, 'Centros de Costo'), (2, 'Elementos de Gastos')], editable=False, primary_key=True, serialize=False)),
                ('clave', models.CharField(max_length=80, unique=True, verbose_name='Configurar Centros y Elementos')),
            ],
            options={
                'db_table': 'cla_confcentroselementosotros',
                'ordering': ['clave'],
            },
        ),
        migrations.CreateModel(
            name='EstadoProducto',
            fields=[
                ('id', models.AutoField(choices=[(1, 'Bueno'), (2, 'Deficiente'), (3, 'Rechazo')], editable=False, primary_key=True, serialize=False)),
                ('descripcion', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'cla_estadoproducto',
            },
        ),
        migrations.CreateModel(
            name='FormatoCuentaProducto',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=30)),
                ('separador', models.CharField(max_length=1)),
                ('posicion', models.IntegerField()),
                ('longitud', models.IntegerField()),
                ('enuso', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MarcaSalida',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('codigo', models.CharField(max_length=5, unique=True, verbose_name='Code')),
                ('descripcion', models.CharField(max_length=128, unique=True, verbose_name='Description')),
                ('activa', models.BooleanField(default=True, verbose_name='Active')),
            ],
            options={
                'db_table': 'cla_marcasalida',
                'ordering': ['descripcion'],
            },
        ),
        migrations.CreateModel(
            name='MotivoAjuste',
            fields=[
                ('id', models.AutoField(choices=[(1, 'Merma'), (2, 'Rotura'), (3, 'Promoción'), (4, 'SubProductos')], editable=False, primary_key=True, serialize=False)),
                ('descripcion', models.CharField(max_length=128, unique=True, verbose_name='Description')),
                ('aumento', models.BooleanField(db_comment='Ajuste de aumento True en otro caso False', default=False, verbose_name='Increase')),
                ('activo', models.BooleanField(default=True, verbose_name='Active')),
            ],
            options={
                'db_table': 'cla_motivoajuste',
                'ordering': ['aumento', 'descripcion'],
            },
        ),
        migrations.CreateModel(
            name='NumeracionDocumentos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tiponumeracion', models.IntegerField(choices=[(1, 'Número Consecutivo'), (2, 'Número de Control')], unique=True, verbose_name='Tipo de Enumeración')),
                ('sistema', models.BooleanField(db_comment='Si es controlado por el sistema', default=False, verbose_name='Controlada por el sistema')),
                ('departamento', models.BooleanField(db_comment='Si el número es por departamento', default=False, verbose_name='Por Departmento')),
                ('tipo_documento', models.BooleanField(db_comment='Si el número es por tipo de documento', default=False, verbose_name='Por tipo de Documento')),
                ('prefijo', models.BooleanField(db_comment='Si el número de documento va a contener un prefijo', default=False, verbose_name='Usar Prefijo')),
            ],
            options={
                'db_table': 'cla_numeraciondocumentos',
            },
        ),
        migrations.CreateModel(
            name='TipoDocumento',
            fields=[
                ('id', models.AutoField(choices=[(1, 'Entrada Desde Versat'), (2, 'Salida Hacia Versat'), (3, 'Transferencia Hacia Departamento'), (4, 'Transferencia Desde Departamento'), (5, 'Ajuste de Aumento'), (6, 'Ajuste de Disminución'), (7, 'Recepción de Producción de Reproceso'), (8, 'Recepción de Producción'), (9, 'Devolución'), (10, 'Sobrante Sujeto a Investigación'), (11, 'Recepción de Rechazo'), (12, 'Carga Inicial'), (13, 'Devolución Recibida'), (14, 'Cambio de Estado'), (15, 'Transferencia Externa'), (16, 'Recibir Transferencia Externa'), (17, 'Venta a Trabajadores'), (18, 'Reporte de SubProductos'), (19, 'Cambio de Producto')], editable=False, primary_key=True, serialize=False)),
                ('descripcion', models.CharField(max_length=128, unique=True)),
                ('operacion', models.CharField(db_comment='Operación de Entrada (E) o Salida (S)', max_length=1)),
                ('generado', models.BooleanField(db_comment='Si se genera automáticamente', default=False, verbose_name='Generado')),
            ],
            options={
                'db_table': 'cla_tipodocumento',
                'ordering': ['operacion', 'descripcion'],
            },
        ),
        migrations.CreateModel(
            name='TipoProducto',
            fields=[
                ('id', models.AutoField(choices=[(1, 'Pesada'), (2, 'Materia Prima'), (3, 'Habilitación'), (4, 'Línea de Salida'), (5, 'Vitola'), (6, 'Subproducto'), (7, 'Línea sin Terminar')], editable=False, primary_key=True, serialize=False)),
                ('descripcion', models.CharField(max_length=80, unique=True)),
                ('orden', models.SmallIntegerField(default=1)),
            ],
            options={
                'db_table': 'cla_tipoproducto',
                'ordering': ['orden', 'descripcion'],
            },
        ),
        migrations.CreateModel(
            name='TipoVitola',
            fields=[
                ('id', models.AutoField(choices=[(1, 'Picadura'), (2, 'Hoja')], editable=False, primary_key=True, serialize=False)),
                ('descripcion', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'cla_tipovitola',
            },
        ),
        migrations.CreateModel(
            name='CentroCosto',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('clave', models.CharField(max_length=50, unique=True, verbose_name='Code')),
                ('descripcion', models.CharField(max_length=255, unique=True, verbose_name='Description')),
                ('activo', models.BooleanField(default=True, verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Cost center',
                'verbose_name_plural': 'Centers of cost',
                'db_table': 'cla_centrocosto',
                'ordering': ['descripcion', 'clave'],
                'indexes': [models.Index(fields=['clave', 'descripcion'], name='cla_centroc_clave_f9da43_idx')],
            },
        ),
        migrations.CreateModel(
            name='ConfCentrosElementosOtrosDetalle',
            fields=[
                ('id', models.IntegerField(editable=False, primary_key=True, serialize=False)),
                ('descripcion', models.CharField(max_length=250)),
                ('valor', models.CharField(blank=True, max_length=100, null=True)),
                ('clave', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='confccelem_clave', to='codificadores.confcentroselementosotros', verbose_name='Configurar')),
            ],
            options={
                'db_table': 'cla_confcentroselementosotrosdetalle',
                'ordering': ['clave__clave', 'descripcion'],
            },
        ),
        migrations.CreateModel(
            name='ConfCentrosElementosOtrosDetalleGrouped',
            fields=[
            ],
            options={
                'ordering': ['clave__clave', 'descripcion'],
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('codificadores.confcentroselementosotrosdetalle',),
        ),
        migrations.CreateModel(
            name='Cuenta',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('long_niv', models.IntegerField()),
                ('posicion', models.IntegerField()),
                ('clave', models.CharField(max_length=100, unique=True)),
                ('clavenivel', models.CharField(max_length=100)),
                ('descripcion', models.CharField(max_length=1000, verbose_name='Description')),
                ('activa', models.BooleanField(default=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='codificadores.cuenta')),
            ],
            options={
                'verbose_name': 'Account',
                'verbose_name_plural': 'Accounts',
                'db_table': 'cla_cuenta',
                'ordering': ['clave', 'posicion'],
            },
        ),
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('codigo', models.CharField(max_length=125, unique=True, verbose_name='Code')),
                ('descripcion', models.CharField(max_length=125, unique=True, verbose_name='Description')),
                ('inicializado', models.BooleanField(default=False)),
                ('centrocosto', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='departamento_centrocosto', to='codificadores.centrocosto', verbose_name='Cost Center')),
                ('relaciondepartamento', models.ManyToManyField(blank=True, null=True, related_name='departamentorelacion_destino', to='codificadores.departamento', verbose_name='Destination Department')),
                ('departamentoproducto', models.ManyToManyField(blank=True, null=True, related_name='departamentoproductosalida_producto', to='codificadores.tipoproducto', verbose_name='Output Product')),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
                'db_table': 'cla_departamento',
                'ordering': ['codigo'],
            },
        ),
        migrations.CreateModel(
            name='Medida',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('clave', models.CharField(max_length=6, unique=True, verbose_name='U.M')),
                ('descripcion', models.CharField(max_length=50, unique=True, verbose_name='Description')),
                ('activa', models.BooleanField(default=True, verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Unit of measurement',
                'verbose_name_plural': 'Measurement units',
                'db_table': 'cla_medida',
                'ordering': ['clave', 'descripcion'],
                'indexes': [models.Index(fields=['clave', 'descripcion'], name='cla_medida_clave_ee8e43_idx')],
            },
        ),
        migrations.CreateModel(
            name='MedidaConversion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('factor_conversion', models.DecimalField(db_comment='Factor de conversión', decimal_places=6, max_digits=10, validators=[django.core.validators.MinValueValidator(1e-06, message='The value must be greater than 0')], verbose_name='Convertion Factor')),
                ('medidad', models.ForeignKey(db_comment='Medida destino de la conversión', on_delete=django.db.models.deletion.CASCADE, related_name='medidaconversion_destino', to='codificadores.medida', verbose_name='Destination Measure')),
                ('medidao', models.ForeignKey(db_comment='Medida origen de la conversión', on_delete=django.db.models.deletion.CASCADE, related_name='medidaconversion_origen', to='codificadores.medida', verbose_name='Origin Measure')),
            ],
            options={
                'verbose_name': 'Convert unit of measurement',
                'verbose_name_plural': 'Convert measurement units',
                'db_table': 'cla_medidaconversion',
                'ordering': ['medidao__descripcion'],
            },
        ),
        migrations.CreateModel(
            name='NormaConsumo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tipo', models.IntegerField(choices=[(1, 'Pesada'), (2, 'Materia Prima'), (4, 'Línea de Salida'), (5, 'Vitola'), (7, 'Habilitados')], verbose_name='Type')),
                ('cantidad', models.DecimalField(decimal_places=6, default=0.0, max_digits=18, verbose_name='Quantity')),
                ('activa', models.BooleanField(default=True, verbose_name='Active')),
                ('fecha_creacion', models.DateTimeField(db_default=django.db.models.functions.datetime.Now(), verbose_name='Crate at')),
                ('fecha', models.DateField(verbose_name='Date')),
                ('medida', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='normaconsumo_medida', to='codificadores.medida', verbose_name='U.M')),
            ],
            options={
                'db_table': 'cla_normaconsumo',
                'ordering': ['tipo', 'producto__descripcion'],
            },
        ),
        migrations.CreateModel(
            name='NormaConsumoGrouped',
            fields=[
            ],
            options={
                'ordering': ['tipo', 'producto__descripcion', 'fecha'],
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('codificadores.normaconsumo',),
        ),
        migrations.CreateModel(
            name='ProductoFlujo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('codigo', models.CharField(max_length=50, unique=True, verbose_name='Code')),
                ('descripcion', models.CharField(max_length=400, verbose_name='Description')),
                ('activo', models.BooleanField(default=True, verbose_name='Active')),
                ('medida', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='productoflujo_medida', to='codificadores.medida', verbose_name='U.M')),
                ('tipoproducto', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='productoflujo_tipo', to='codificadores.tipoproducto', verbose_name='Product Type')),
            ],
            options={
                'db_table': 'cla_productoflujo',
                'ordering': ['tipoproducto', 'descripcion'],
            },
        ),
        migrations.CreateModel(
            name='NormaconsumoDetalle',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('norma_ramal', models.DecimalField(decimal_places=6, default=0.0, max_digits=18, verbose_name='Ramal Norm')),
                ('norma_empresarial', models.DecimalField(decimal_places=6, default=0.0, max_digits=18, verbose_name='Enterprise Norm')),
                ('operativo', models.BooleanField(db_comment='Si el producto es operativo o no', default=False, verbose_name='Operational')),
                ('medida', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='normaconsumodetalle_medida', to='codificadores.medida', verbose_name='U.M')),
                ('normaconsumo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='normaconsumodetalle_normaconsumo', to='codificadores.normaconsumo')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='normaconsumodetalle_producto', to='codificadores.productoflujo', verbose_name='Product')),
            ],
            options={
                'db_table': 'cla_normaconsumodetalle',
            },
        ),
        migrations.AddField(
            model_name='normaconsumo',
            name='producto',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='normaconsumo_producto', to='codificadores.productoflujo', verbose_name='Product'),
        ),
        migrations.CreateModel(
            name='LineaSalida',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('envase', models.IntegerField(default=0, verbose_name='Package')),
                ('norma_embalaje', models.IntegerField(default=0, verbose_name='Packaging Standard')),
                ('vol_cajam3', models.DecimalField(decimal_places=6, default=0.0, max_digits=10, verbose_name='Box Volume M3')),
                ('peso_bruto', models.DecimalField(decimal_places=6, default=0.0, max_digits=10, verbose_name='Gross Weight')),
                ('peso_neto', models.DecimalField(decimal_places=6, default=0.0, max_digits=10, verbose_name='Net Weight')),
                ('peso_legal', models.DecimalField(decimal_places=6, default=0.0, max_digits=10, verbose_name='Legal Weight')),
                ('marcasalida', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lineasalida_marcasalida', to='codificadores.marcasalida', verbose_name='Starting Mark')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lineasalida_producto', to='codificadores.productoflujo')),
                ('vitola', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lineasalida_vitola', to='codificadores.productoflujo', verbose_name='Vitola')),
            ],
            options={
                'db_table': 'cla_lineasalida',
                'ordering': ['producto__descripcion'],
            },
        ),
        migrations.CreateModel(
            name='CambioProducto',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('productod', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productoflujo_destino', to='codificadores.productoflujo', verbose_name='Destination Product')),
                ('productoo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productoflujo_origen', to='codificadores.productoflujo', verbose_name='Origin Product')),
            ],
            options={
                'verbose_name': 'Cambio de Producto',
                'verbose_name_plural': 'Cambio de Productos',
                'db_table': 'cla_cambioproducto',
                'ordering': ['productoo__descripcion'],
            },
        ),
        migrations.CreateModel(
            name='ProductsCapasClaPesadas',
            fields=[
            ],
            options={
                'ordering': ['tipoproducto', 'descripcion'],
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('codificadores.productoflujo',),
        ),
        migrations.CreateModel(
            name='ProductoFlujoClase',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('clasemateriaprima', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='productosflujoclase_clasemateriaprima', to='codificadores.clasemateriaprima')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productoflujoclase_producto', to='codificadores.productoflujo')),
            ],
            options={
                'db_table': 'cla_productoflujoclase',
            },
        ),
        migrations.CreateModel(
            name='ProductoFlujoCuenta',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('cuenta', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='productoflujocuenta_cuenta', to='codificadores.cuenta')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productoflujocuenta_producto', to='codificadores.productoflujo')),
            ],
            options={
                'db_table': 'cla_productoflujocuenta',
            },
        ),
        migrations.CreateModel(
            name='ProductoFlujoDestino',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('destino', models.CharField(choices=[('C', 'Consumo Nacional'), ('E', 'Exportación')], max_length=1, verbose_name='Destination')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productoflujodestino_producto', to='codificadores.productoflujo')),
            ],
            options={
                'db_table': 'cla_productoflujodestino',
            },
        ),
        migrations.CreateModel(
            name='ProductoFlujoVitola',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productoflujovitola_producto', to='codificadores.productoflujo')),
                ('vitola', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productoflujovitola_vitola', to='codificadores.productoflujo')),
            ],
            options={
                'db_table': 'cla_productoflujovitola',
            },
        ),
        migrations.CreateModel(
            name='TipoDocumentoCuenta',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('cuenta_debe_cn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tipodocumentocuenta_cuenta_debe_cn', to='codificadores.cuenta', verbose_name='Debit Count CN')),
                ('cuenta_debe_exp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tipodocumentocuenta_cuenta_debe_exp', to='codificadores.cuenta', verbose_name='Debit Count Exp')),
                ('cuenta_haber_cn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tipodocumentocuenta_cuenta_haber_cn', to='codificadores.cuenta', verbose_name='Credit Count CN')),
                ('cuenta_haber_exp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tipodocumentocuenta_cuenta_haber_exp', to='codificadores.cuenta', verbose_name='Credit Count Exp')),
                ('documento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='codificadores.tipodocumento', verbose_name='Document Type')),
            ],
            options={
                'db_table': 'cla_tipodocumentocuenta',
            },
        ),
        migrations.CreateModel(
            name='TipoDocumentoCuentaTransfExterna',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('departamento', models.ForeignKey(db_comment='Dpto de la unidad contable para la que se va a configurar el documento', on_delete=django.db.models.deletion.PROTECT, related_name='tipodocumentocuentatransfexterna_departamento', to='codificadores.departamento', verbose_name='Department')),
                ('documento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='codificadores.tipodocumento', verbose_name='Document Type')),
            ],
            options={
                'db_table': 'cla_tipodocumentocuentatransfexterna',
            },
        ),
        migrations.CreateModel(
            name='UnidadContable',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('codigo', models.CharField(max_length=10, unique=True, verbose_name='Code')),
                ('nombre', models.CharField(max_length=30, unique=True, verbose_name='Name')),
                ('activo', models.BooleanField(default=True, verbose_name='Active')),
                ('is_empresa', models.BooleanField(default=False, verbose_name='Is Company')),
                ('is_comercializadora', models.BooleanField(default=False, verbose_name='Is Commercial')),
            ],
            options={
                'verbose_name': 'UEB',
                'verbose_name_plural': 'UEBs',
                'db_table': 'cla_unidadcontable',
                'ordering': ['codigo'],
                'indexes': [models.Index(fields=['codigo'], name='cla_unidadc_codigo_ea13a8_idx')],
            },
        ),
        migrations.CreateModel(
            name='TipoDocumentoCuentaTransfExternaUEB',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('cuenta_debe_cn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tipodocumentocuentatransfexternadpto_cuenta_debe_cn', to='codificadores.cuenta')),
                ('cuenta_debe_exp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tipodocumentocuentatransfexternadpto_cuenta_debe_exp', to='codificadores.cuenta')),
                ('cuenta_haber_cn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tipodocumentocuentatransfexternadpto_cuenta_haber_cn', to='codificadores.cuenta')),
                ('cuenta_haber_exp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tipodocumentocuentatransfexternadpto_cuenta_haber_exp', to='codificadores.cuenta')),
                ('idtipodocumentocuentatransfexterna', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tipodocumentocuentatransfexternadpto_ipodocumentocuentatransfexterna', to='codificadores.tipodocumentocuentatransfexterna')),
                ('unidadcontable', models.ForeignKey(db_comment='Unidad contab que recibe o envía la transf, según el tipo de documento', on_delete=django.db.models.deletion.PROTECT, related_name='tipodocumentocuentatransfexternadpto_unidadcontable', to='codificadores.unidadcontable')),
            ],
            options={
                'db_table': 'cla_tipodocumentocuentatransfexternaueb',
            },
        ),
        migrations.AddField(
            model_name='tipodocumentocuentatransfexterna',
            name='unidadcontable',
            field=models.ForeignKey(db_comment='Esta es la unidad contable para la que se va a configurar el documento', on_delete=django.db.models.deletion.PROTECT, related_name='tipodocumentocuentatransfexterna_unidadcontable', to='codificadores.unidadcontable', verbose_name='UEB'),
        ),
        migrations.AddField(
            model_name='departamento',
            name='unidadcontable',
            field=models.ManyToManyField(related_name='departamento_unidadcontable', to='codificadores.unidadcontable', verbose_name='UEB'),
        ),
        migrations.CreateModel(
            name='Vitola',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('diametro', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Diameter')),
                ('longitud', models.IntegerField(default=0, verbose_name='Length')),
                ('destino', models.CharField(choices=[('C', 'Consumo Nacional'), ('E', 'Exportación')], max_length=1, verbose_name='Destination')),
                ('cepo', models.IntegerField(default=0)),
                ('capa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vitola_productocapa', to='codificadores.productoflujo')),
                ('categoriavitola', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vitola_categotia', to='codificadores.categoriavitola')),
                ('pesada', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vitola_productopesada', to='codificadores.productoflujo')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vitola_producto', to='codificadores.productoflujo')),
                ('tipovitola', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vitola_tipo', to='codificadores.tipovitola', verbose_name='Type')),
            ],
            options={
                'db_table': 'cla_vitola',
                'ordering': ['destino', 'categoriavitola', 'producto__descripcion'],
            },
        ),
        migrations.AddIndex(
            model_name='confcentroselementosotrosdetalle',
            index=models.Index(fields=['clave', 'descripcion'], name='cla_confcen_clave_i_8d78b0_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='confcentroselementosotrosdetalle',
            unique_together={('clave', 'valor')},
        ),
        migrations.AddIndex(
            model_name='cuenta',
            index=models.Index(fields=['clave'], name='cla_cuenta_clave_f63dff_idx'),
        ),
        migrations.AddIndex(
            model_name='medidaconversion',
            index=models.Index(fields=['medidao', 'medidad'], name='cla_medidac_medidao_706d4a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='medidaconversion',
            unique_together={('medidao', 'medidad')},
        ),
        migrations.AddIndex(
            model_name='cambioproducto',
            index=models.Index(fields=['productoo', 'productod'], name='cla_cambiop_product_fcf89d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='cambioproducto',
            unique_together={('productoo', 'productod')},
        ),
        migrations.AddIndex(
            model_name='departamento',
            index=models.Index(fields=['codigo', 'descripcion', 'centrocosto'], name='cla_departa_codigo_9c90b9_idx'),
        ),
    ]
